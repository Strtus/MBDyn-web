Index: mbdyn/base/constltp_impl.cc
===================================================================
RCS file: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/mbdyn/base/constltp_impl.cc,v
retrieving revision 1.47
diff -u -r1.47 constltp_impl.cc
--- mbdyn/base/constltp_impl.cc	8 Jan 2012 10:52:27 -0000	1.47
+++ mbdyn/base/constltp_impl.cc	11 Jan 2012 10:20:16 -0000
@@ -1193,22 +1193,16 @@
 			}
 		}
 
-		typedef typename L::Status LS;
-		LS s = L::INACTIVE;
+		bool s(false);
 		if (HP.IsKeyWord("initial" "status")) {
 			if (HP.IsKeyWord("active")) {
-				s = L::ACTIVE;
+				s = true;
 
 			} else if (HP.IsKeyWord("inactive")) {
-				s = L::INACTIVE;
+				s = false;
 
 			} else {
-				if (HP.GetBool()) {
-					s = L::ACTIVE;
-
-				} else {
-					s = L::INACTIVE;
-				}
+				s = HP.GetBool();
 			}
 		}
 
@@ -1283,14 +1277,8 @@
 		bool bStatus(false);
 		ReadBiStopBase(HP, bStatus, pA, pD);
 
-		typedef typename L::Status LS;
-		LS s(L::INACTIVE);
-		if (bStatus) {
-			s = L::ACTIVE;
-		}
-
 		ConstitutiveLaw<doublereal, doublereal> *pWrappedCL = ReadCL1D(pDM, HP, CLType);
-		SAFENEWWITHCONSTRUCTOR(pCL, L, L(pWrappedCL, s, pA, pD));
+		SAFENEWWITHCONSTRUCTOR(pCL, L, L(pWrappedCL, bStatus, pA, pD));
 
 		return pCL;
 	};
@@ -1308,14 +1296,8 @@
 		bool bStatus(false);
 		ReadBiStopBase(HP, bStatus, pA, pD);
 
-		typedef typename L::Status LS;
-		LS s(L::INACTIVE);
-		if (bStatus) {
-			s = L::ACTIVE;
-		}
-
 		ConstitutiveLaw<Vec3, Mat3x3> *pWrappedCL = ReadCL3D(pDM, HP, CLType);
-		SAFENEWWITHCONSTRUCTOR(pCL, L, L(pWrappedCL, s, pA, pD));
+		SAFENEWWITHCONSTRUCTOR(pCL, L, L(pWrappedCL, bStatus, pA, pD));
 
 		return pCL;
 	};
@@ -1333,14 +1315,8 @@
 		bool bStatus(false);
 		ReadBiStopBase(HP, bStatus, pA, pD);
 
-		typedef typename L::Status LS;
-		LS s(L::INACTIVE);
-		if (bStatus) {
-			s = L::ACTIVE;
-		}
-
 		ConstitutiveLaw<Vec6, Mat6x6> *pWrappedCL = ReadCL6D(pDM, HP, CLType);
-		SAFENEWWITHCONSTRUCTOR(pCL, L, L(pWrappedCL, s, pA, pD));
+		SAFENEWWITHCONSTRUCTOR(pCL, L, L(pWrappedCL, bStatus, pA, pD));
 
 		return pCL;
 	};
Index: mbdyn/base/constltp_impl.h
===================================================================
RCS file: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/mbdyn/base/constltp_impl.h,v
retrieving revision 1.34
diff -u -r1.34 constltp_impl.h
--- mbdyn/base/constltp_impl.h	8 Jan 2012 10:53:38 -0000	1.34
+++ mbdyn/base/constltp_impl.h	11 Jan 2012 10:20:16 -0000
@@ -2099,10 +2099,9 @@
 template <class T, class Tder>
 class BiStopCLWrapper
 : public ConstitutiveLaw<T, Tder> {
-public:
+private:
 	enum Status { INACTIVE, ACTIVE };
 
-private:
 	ConstitutiveLaw<T, Tder> *m_pCL;
 	enum Status m_status;
 	const DriveCaller *m_pActivatingCondition;
@@ -2112,11 +2111,11 @@
 public:
 	BiStopCLWrapper(
 			ConstitutiveLaw<T, Tder> *pCL,
-			enum Status initialStatus,
+			bool bInitialStatus,
 			const DriveCaller *pA,
 			const DriveCaller *pD
 	) : 
-	m_pCL(pCL), m_status(initialStatus),
+	m_pCL(pCL), m_status(bInitialStatus ? ACTIVE : INACTIVE),
 	m_pActivatingCondition(pA), m_pDeactivatingCondition(pD),
 	m_EpsRef(mb_zero<T>()) {
 		ASSERT(m_pActivatingCondition != 0);
@@ -2140,7 +2139,7 @@
 		SAFENEWWITHCONSTRUCTOR(pCL,
 			cl,
 			cl(m_pCL->pCopy(),
-				m_status,
+				m_status == ACTIVE,
 				m_pActivatingCondition->pCopy(),
 				m_pDeactivatingCondition->pCopy()));
 
