# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2022
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Scienze e Tecnologie Aerospaziali - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 1.e-3;

	method: ms, .6;

	max iterations: 10;
	tolerance: 1.e-5;

	linear solver: naive, colamd, mt, 1;

end: initial value;

set: integer N = 5;

begin: control data;
	structural nodes: 
		+1    # clamped node
		+2*N  # other nodes
	;
	rigid bodies:
		+2*N  # mass of other nodes
	;
	joints:
		+1    # clamp
	;
	beams:
		+N    # the whole beam
	;
	forces:
		+1    # loads the beam
	;
end: control data;

set: real m = 1.;
set: real j = 1.e-2;
set: real L = .5;
set: real dL = L/N;

set: integer curr_elem;

begin: nodes;
	structural: 1, static,
		null, 
		eye, 
		null, 
		null;

	set: curr_elem = 2;
	include: "beam.nod";
	set: curr_elem = 4;
	include: "beam.nod";
	set: curr_elem = 6;
	include: "beam.nod";
	set: curr_elem = 8;
	include: "beam.nod";
	set: curr_elem = 10;
	include: "beam.nod";
end: nodes;

begin: elements;
	joint: 1, clamp, 1, node, node;

	set: curr_elem = 2;
	include: "beam.elm";
	set: curr_elem = 4;
	include: "beam.elm";
	set: curr_elem = 6;
	include: "beam.elm";
	set: curr_elem = 8;
	include: "beam.elm";
	set: curr_elem = 10;
	include: "beam.elm";

	# constant follower force in node 3
	force: 2 * N + 1, follower, 
		2 * N + 1,
		position,  null,
		0., 0., 1.,
		cosine, 0., pi/2., 10., half, 0.;
end: elements;

# vim:ft=mbd
