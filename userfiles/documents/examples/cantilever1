# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2022
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Scienze e Tecnologie Aerospaziali - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 1.e-3;

	max iterations: 10;
	tolerance: 1.e-6;
end: initial value;

begin: control data;
	structural nodes: 
		+1    # clamped node
		+2    # other nodes
	;
	rigid bodies:
		+2    # mass of other nodes
	;
	joints:
		+1    # clamp
	;
	beams:
		+1    # the whole beam
	;
	forces:
		+1    # loads the beam
	;
end: control data;

set: real m = 1.;
set: real j = 1.e-2;
set: real L = .5;

begin: nodes;
	structural: 1, static,
		null, 
		eye, 
		null, 
		null;

	structural: 2, dynamic,
		L/2., 0., 0.,
		eye, 
		null, 
		null;

	structural: 3, dynamic,
		L, 0., 0., 
		eye, 
		null, 
		null;
end: nodes;

begin: elements;
	joint: 1, clamp, 1, node, node;

	body: 2, 2,
		(L/2.)*m,
		null,
		diag, (L/2.)*j, 1./12.*(L/2.)^3*m, 1./12.*(L/2.)^3*m;

	body: 3, 3,
		(L/4.)*m,
		-(L/8.), 0., 0.,
		diag, (L/4.)*j, 1./12.*(L/4.)^3*m, 1./12.*(L/4.)^3*m;

	beam: 1,
		1, null,
		2, null,
		3, null,
		eye,
		linear elastic generic,
			diag, 1.e9, 1.e9, 1.e9, 1.e4, 1.e4, 1.e5,
		same,
		same;

	/*
	# constant absolute force in node 3
	force: 3, absolute, 
		3, 0., 0., 1., null,
		const, 100.;
	*/
	/*
	# constant follower force in node 3
	force: 3, follower, 
		3, 0., 0., 1., null,
		const, 100.;
	*/

	set: real initial_time = 0.;
	set: real frequency = 10./pi; # radians
	set: real amplitude = 100.;
	set: real initial_value = 0.;
	# absolute force in node 3
	# with different amplification factors
	force: 3, absolute, 
		3,
		position, null,
		0., 0., 1.,
		array, 2,
			sine, initial_time, frequency, amplitude, 
				forever, initial_value,
			cosine, initial_time+.1, frequency/2., amplitude, 
				half, initial_value;
end: elements;

# vim:ft=mbd
